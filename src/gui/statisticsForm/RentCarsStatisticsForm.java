/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.statisticsForm;

import java.awt.Color;
import java.awt.List;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.GregorianCalendar;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import src.dao.RentCarsDAO;
import src.models.RentCars;

/**
 *
 * @author paulo
 */
public class RentCarsStatisticsForm extends javax.swing.JFrame {
    
    private RentCarsDAO rentCarsDAO;
    private ArrayList<RentCars> listRentCars;
    /**
     * Creates new form RentCarsStatisticsForm
     */
    public RentCarsStatisticsForm() {
        initComponents();
        initPersoComponents();
    }
    
    private void initPersoComponents()
    {
        errorSaisiLabel.setVisible(false);
        
        String url = "jdbc:mysql://localhost:3308/projetjava?serverTimezone=UTC";
        String username="root";
        String password="ProjetJava2020";

        rentCarsDAO = new RentCarsDAO(url,username,password);  
        
        listRentCars = new ArrayList<>();
        
        listRentCars = rentCarsDAO.getAllRentCars();
    }
    
    public static ArrayList<Date> getDatesBetween(Date startDate, Date endDate)
    {
        ArrayList<Date> datesInRange = new ArrayList<>();
        Calendar calendar = new GregorianCalendar();
        calendar.setTime(startDate);

        Calendar endCalendar = new GregorianCalendar();
        endCalendar.setTime(endDate);

        while (!calendar.after(endCalendar)) 
        {
            Date result = calendar.getTime();
            datesInRange.add(result);
            calendar.add(Calendar.DATE, 1);
        }
        
        
    return datesInRange;
    }
    
    
 //return IntStream.iterate(0, i -> i + 1).limit(numOfDaysBetween).mapToObj(i -> startDate.plusDays(i)).collect(Collectors.toList());   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statisticPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        carsButton = new javax.swing.JButton();
        colorButton = new javax.swing.JButton();
        rentCarsInTimeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maxDateChooser = new com.toedter.calendar.JDateChooser();
        minDateChooser = new com.toedter.calendar.JDateChooser();
        errorSaisiLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        statisticPanel.setBackground(new java.awt.Color(102, 51, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("RENT CARS");

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));

        carsButton.setText("Cars");
        carsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carsButtonActionPerformed(evt);
            }
        });

        colorButton.setText("Color");
        colorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButtonActionPerformed(evt);
            }
        });

        rentCarsInTimeButton.setText("Rent Cars in Time");
        rentCarsInTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentCarsInTimeButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Min");

        jLabel3.setText("Max");

        errorSaisiLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorSaisiLabel.setText("Error saisi");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rentCarsInTimeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(minDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(colorButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(carsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(errorSaisiLabel)))))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(maxDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(backButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(carsButton)
                    .addComponent(errorSaisiLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(colorButton)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rentCarsInTimeButton)
                            .addComponent(jLabel2)))
                    .addComponent(minDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(maxDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout statisticPanelLayout = new javax.swing.GroupLayout(statisticPanel);
        statisticPanel.setLayout(statisticPanelLayout);
        statisticPanelLayout.setHorizontalGroup(
            statisticPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statisticPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statisticPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(151, 151, 151))
        );
        statisticPanelLayout.setVerticalGroup(
            statisticPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statisticPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(statisticPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statisticPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void carsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carsButtonActionPerformed
        ArrayList listRentCarsName = new ArrayList();
        ArrayList listAllRentCarsName = new ArrayList();

        for(int i = 0; i < listRentCars.size(); i++ )
        {
            listAllRentCarsName.add(listRentCars.get(i).getCarName());

            if(listRentCarsName.contains(listRentCars.get(i).getCarName()) == false)
            {
                listRentCarsName.add(listRentCars.get(i).getCarName());

            }
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for(int i = 0; i < listRentCarsName.size(); i++ )
        {
            System.out.println(listRentCarsName.get(i) + " : " + Collections.frequency(listAllRentCarsName, listRentCarsName.get(i)));
            dataset.setValue(Collections.frequency(listAllRentCarsName, listRentCarsName.get(i)), "", listRentCarsName.get(i).toString());
        }

        JFreeChart chart = ChartFactory.createBarChart("Cars", "", "", dataset, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.BLACK);

        ChartFrame chartFrm = new ChartFrame("Statistics Cars",chart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(900,600);

    }//GEN-LAST:event_carsButtonActionPerformed

    private void colorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButtonActionPerformed
        
        ArrayList listRentCarsColor = new ArrayList();
        ArrayList listAllRentCarsColor = new ArrayList();

        for(int i = 0; i < listRentCars.size(); i++ )
        {
            listAllRentCarsColor.add(listRentCars.get(i).getCarColor());

            if(listRentCarsColor.contains(listRentCars.get(i).getCarColor()) == false)
            {
                listRentCarsColor.add(listRentCars.get(i).getCarColor());

            }
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for(int i = 0; i < listRentCarsColor.size(); i++ )
        {
            System.out.println(listRentCarsColor.get(i) + " : " + Collections.frequency(listAllRentCarsColor, listRentCarsColor.get(i)));
            dataset.setValue(Collections.frequency(listAllRentCarsColor, listRentCarsColor.get(i)), "", listRentCarsColor.get(i).toString());
        }

        JFreeChart chart = ChartFactory.createBarChart("Cars", "", "", dataset, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.BLACK);

        ChartFrame chartFrm = new ChartFrame("Statistics Cars",chart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(900,600);
        
    }//GEN-LAST:event_colorButtonActionPerformed

    private void rentCarsInTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentCarsInTimeButtonActionPerformed
       ArrayList listAllRentCarsStartDate = new ArrayList();
       ArrayList listAllRentCarsEndDate = new ArrayList();
        
        for(int i = 0; i < listRentCars.size(); i++ )
        {
            listAllRentCarsStartDate.add(listRentCars.get(i).getStartDate());
            listAllRentCarsEndDate.add(listRentCars.get(i).getEndDate());
        }
        
        Collections.sort(listAllRentCarsStartDate);
        Collections.sort(listAllRentCarsEndDate);
                
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        ArrayList<Date> datesInRange = new ArrayList<>(); 
        
        Date firstDate = new Date();
        Date lastDate = new Date();
        
        if(minDateChooser.getDate() == null || maxDateChooser.getDate() == null)
        {
            firstDate.setTime((long) listAllRentCarsStartDate.get(0));
            lastDate.setTime((long) listAllRentCarsEndDate.get(listAllRentCarsEndDate.size()-1));
        }
        else
        {
            firstDate.setTime((long) minDateChooser.getDate().getTime());
            lastDate.setTime((long) maxDateChooser.getDate().getTime());
        }
        
        if(firstDate.getTime() < lastDate.getTime() && !sdf.format(firstDate.getTime()).toString().equals(sdf.format(lastDate.getTime()).toString()))
        {
            System.out.println(sdf.format(firstDate.getTime()));
            System.out.println(sdf.format(lastDate.getTime()));
            
            errorSaisiLabel.setVerifyInputWhenFocusTarget(false);
            
            datesInRange = getDatesBetween(firstDate,lastDate);
        
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
            System.out.println(datesInRange.size());
        
            for(int i = 0; i < datesInRange.size(); i++)
            {
                dataset.addValue(0,"", sdf.format(datesInRange.get(i)).toString());
            }
        
            double valeur;
        
            for(int i = 0; i < datesInRange.size(); i++ )
            {
                for(int j = 0; j < listRentCars.size(); j++)
                {
                    if(datesInRange.get(i).getTime() >= listRentCars.get(j).getStartDate() && datesInRange.get(i).getTime() <= listRentCars.get(j).getEndDate())
                    {
                        valeur = (double) dataset.getValue("", sdf.format(datesInRange.get(i)).toString());
                        
                        dataset.addValue(valeur + 1,"", sdf.format(datesInRange.get(i)).toString());
                    }
                }
            }
        
            JFreeChart chart = ChartFactory.createLineChart("Rent Cars", "Days", "Numbers of Rent Cars", dataset, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot catPlot = chart.getCategoryPlot();
            catPlot.setRangeGridlinePaint(Color.BLACK);

            ChartFrame chartFrm = new ChartFrame("Statistics Cars",chart,true);
            chartFrm.setVisible(true);
            chartFrm.setSize(900,600);
        }
        else
        {
            errorSaisiLabel.setVisible(true);
        }
            
        
        
        
        
                
        
        
        
        

        
    }//GEN-LAST:event_rentCarsInTimeButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentCarsStatisticsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentCarsStatisticsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentCarsStatisticsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentCarsStatisticsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentCarsStatisticsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton carsButton;
    private javax.swing.JButton colorButton;
    private javax.swing.JLabel errorSaisiLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser maxDateChooser;
    private com.toedter.calendar.JDateChooser minDateChooser;
    private javax.swing.JButton rentCarsInTimeButton;
    private javax.swing.JPanel statisticPanel;
    // End of variables declaration//GEN-END:variables
}
